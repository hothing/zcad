.PHONY: checkallvars checkvars clean zcadenv zcadelectrotechenv version zcad zcadelectrotech afterzcadelectrotechbuild cleanzcad cleanzcadelectrotech installpkgstolaz zcadelectrotechpdfuseguide rmpkgslibs tests
default: cleanzcad
ZCVERSION:=$(shell git describe --tags)
QZCVERSION:='$(ZCVERSION)'

OSDETECT:=
ifeq ($(OS),Windows_NT)
	OSDETECT:=WIN32
else
	UNAME_S:=$(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		OSDETECT=LINUX
	endif
	ifeq ($(UNAME_S),Darwin)
		OSDETECT:=OSX
	endif
endif

CPUDETECT:=
ifeq ($(OS),Windows_NT)
	ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
		CPUDETECT=AMD64
	endif
	ifeq ($(PROCESSOR_ARCHITECTURE),x86)
		CPUDETECT=IA32
	endif
else
	UNAME_P := $(shell uname -p)
	ifeq ($(UNAME_P),x86_64)
		CPUDETECT=AMD64
	endif
		ifneq ($(filter %86,$(UNAME_P)),)
	CPUDETECT=IA32
		endif
	ifneq ($(filter arm%,$(UNAME_P)),)
		CPUDETECT=ARM
	endif
endif

PCP:=
ifeq ($(OSDETECT),WIN32)
	PCP=$(LOCALAPPDATA)\lazarus
else
	PCP='~/.lazarus'
endif

LP:=
ifeq ($(OSDETECT),WIN32)
	LP=C:/lazarus
	PATH=$PATH:$LP/bin
else
	LP=$(shell which lazarus)
	ifeq ($(OSDETECT),OSX)
		LP=~/lazarus
		PATH=$PATH:$LP/bin
	endif
endif

ZP:=$(shell lazbuild  cad_source/zcad.lpi  --get-expand-text=$$\(ProjPath\)../cad/bin/$$\(TargetCPU\)-$$\(TargetOS\))

checkallvars: checkvars 
	@echo OSDETECT=$(OSDETECT)
	@echo CPUDETECT=$(CPUDETECT)

checkvars:              
	@echo PCP=$(PCP)
	@echo LP=$(LP)
	@echo ZP=$(ZP)

clean:                  
	rm -rf  cad_source/autogenerated/*
	rm -rf  cad_source/autogenerated
	rm -rf  cad/*
	rm -rf cad
	rm -rf lib/*
	rm -rf errors/*.bak
	rm -rf errors/*.dbpas

updatezcadenv: checkvars      
	rm -rf  cad/blocks
	rm -rf  cad/components
	rm -rf  cad/configs
	rm -rf  cad/examples
	rm -rf  cad/fonts
	rm -rf  cad/images
	rm -rf  cad/languages
	rm -rf  cad/log
	rm -rf  cad/menu
	rm -rf  cad/plugins
	rm -rf  cad/programdb
	rm -rf  cad/template
	cp -r environment/runtimefiles/common/* cad
	cp -r environment/runtimefiles/zcad/* cad

updatezcadelectrotechenv: checkvars      
	rm -rf  cad/blocks
	rm -rf  cad/components
	rm -rf  cad/configs
	rm -rf  cad/examples
	rm -rf  cad/fonts
	rm -rf  cad/images
	rm -rf  cad/languages
	rm -rf  cad/log
	rm -rf  cad/menu
	rm -rf  cad/plugins
	rm -rf  cad/programdb
	rm -rf  cad/template
	cp -r environment/runtimefiles/common/* cad
	cp -r environment/runtimefiles/zcadelectrotech/* cad

zcadenv: checkvars      
ifneq ($(shell test -d cad && echo -n yes),yes)
	mkdir cad
	mkdir $(subst /,/,cad_source/autogenerated)
endif
	cp -r environment/runtimefiles/common/* cad
	cp -r environment/runtimefiles/zcad/* cad
	echo create_file > cad_source/autogenerated/buildmode.inc
	rm -r cad_source/autogenerated/buildmode.inc

zcadelectrotechenv: checkvars 
ifneq ($(shell test -d cad && echo -n yes),yes)
	mkdir cad
	mkdir $(subst /,/,cad_source/autogenerated)	
endif
	cp -r environment/runtimefiles/common/* cad
	cp -r environment/runtimefiles/zcadelectrotech/* cad
	echo create_file > cad_source/autogenerated/buildmode.inc
	rm -r cad_source/autogenerated/buildmode.inc

version:
	echo ZCAD Version: $(ZCVERSION)
	echo quoted ZCAD Version: $(QZCVERSION)
#	@echo $(QZCVERSION) > cad_source/zcadversion.inc
ifeq ($(OSDETECT),WIN32)
	cmd.exe "/C echo '$(ZCVERSION)' > cad_source/zcadversion.inc"
else
	echo \'$(ZCVERSION)\' > cad_source/zcadversion.inc
endif
	@echo $(ZCVERSION) > cad_source/zcadversion.txt

zcad: checkvars version       
	lazbuild  cad_source/utils/typeexporter.lpi
	environment/typeexporter/typeexporter pathprefix=cad_source/ outputfile=cad/rtl/system.pas processfiles=environment/typeexporter/zcad.files
	lazbuild  cad_source/zcad.lpi

zcadelectrotech: checkvars version
	lazbuild  cad_source/utils/typeexporter.lpi
	environment/typeexporter/typeexporter pathprefix=cad_source/ outputfile=cad/rtl/system.pas processfiles=environment/typeexporter/zcad.files+environment/typeexporter/zcadelectrotech.files define=ELECTROTECH
	lazbuild  cad_source/zcad.lpi

afterzcadelectrotechbuild: checkallvars version
	$(ZP)/zcad nosplash runscript cad/components/afterbuild.cmd
cad:
	mkdir cad
cad/help:
	mkdir $(subst /,/,cad/help)
cad/help/locale:
	mkdir $(subst /,/,cad/help/locale)
cad/help/locale/ru:
	mkdir $(subst /,/,cad/help/locale/ru)
cad/help/locale/ru/_images:
	mkdir $(subst /,/,cad/help/locale/ru/_images)

documentation: checkvars cad cad/help cad/help/locale cad/help/locale/ru cad/help/locale/ru/_images
	$(MAKE) -C cad_source/docs/userguide LP=$(LP) PCP=$(PCP) all
	cp cad_source/docs/userguide/*.html cad/help
	cp cad_source/docs/userguide/*.pdf cad/help
	cp -r cad_source/docs/userguide/locale/ru/_images/* cad/help/locale/ru/_images

tests: checkvars
	$(MAKE) -C cad_source/components/zcontainers/tests LP=$(LP) PCP=$(PCP) clean all
	$(MAKE) -C cad_source/zengine/tests LP=$(LP) PCP=$(PCP) clean all

updatelocalizedpofiles: checkvars
	cp cad/languages/rtzcad.po cad/languages/rtzcad.pot
	tools/updatepofiles cad/languages/rtzcad.pot
	rm -rf cad/languages/rtzcad.pot
	cp lcl/languages/*.po cad/languages
	cp components/anchordocking/languages/*.po cad/languages

cleanzcad: clean zcadenv zcad

cleanzcadelectrotech: clean zcadelectrotechenv zcadelectrotech

rmpkgslibs:
	rm -rf  cad_source/components/metadarkstyle/lib/*
	rm -rf  cad_source/components/zcontainers/lib/*
	rm -rf  cad_source/components/zbaseutils/lib/*
	rm -rf  cad_source/components/zbaseutilsgui/lib/*
	rm -rf  cad_source/components/zebase/lib/*
	rm -rf  cad_source/components/zcontrols/lib/*
	rm -rf  cad_source/components/zmacros/lib/*
	rm -rf  cad_source/components/zmath/lib/*
	rm -rf  cad_source/components/zobjectinspector/lib/*
	rm -rf  cad_source/components/zscriptbase/lib/*
	rm -rf  cad_source/components/zscript/lib/*
	rm -rf  cad_source/components/ztoolbars/lib/*
	rm -rf  cad_source/components/zundostack/lib/*
	rm -rf  cad_source/components/fpdwg/lib/*
	rm -rf  cad_source/components/fpspreadsheet/lib/*
	rm -rf  cad_source/components/lape/package/lib/*
	rm -rf  cad_source/components/zreaders/lib/*
	rm -rf  cad_source/components/fphunspell/lib/*
	rm -rf  cad_source/simplecad/lib/*
	rm -rf  lib/*

installpkgstolaz: checkvars rmpkgslibs
ifneq ($(OSDETECT),OSX)
	lazbuild  --add-package cad_source/other/agraphlaz/lazarus/ag_graph.lpk
	lazbuild  --add-package cad_source/other/agraphlaz/lazarus/ag_math.lpk
	lazbuild  --add-package cad_source/other/agraphlaz/lazarus/ag_vectors.lpk
endif
	lazbuild  --add-package cad_source/other/uniqueinstance/uniqueinstance_package.lpk
	lazbuild  --add-package cad_source/components/metadarkstyle/metadarkstyle.lpk
	lazbuild  --add-package cad_source/components/zcontainers/zcontainers.lpk
	lazbuild  --add-package cad_source/components/zbaseutils/zbaseutils.lpk
	lazbuild  --add-package cad_source/components/zbaseutilsgui/zbaseutilsgui.lpk
	lazbuild  --add-package cad_source/components/zebase/zebase.lpk
	lazbuild  --add-package cad_source/components/zcontrols/zcontrols.lpk
	lazbuild  --add-package cad_source/components/zmacros/zmacros.lpk
	lazbuild  --add-package cad_source/components/zmath/zmath.lpk
	lazbuild  --add-package cad_source/components/zobjectinspector/zobjectinspector.lpk
	lazbuild  --add-package cad_source/components/zscriptbase/zscriptbase.lpk
	lazbuild  --add-package cad_source/components/zscript/zscript.lpk
	lazbuild  --add-package cad_source/components/ztoolbars/ztoolbars.lpk
	lazbuild  --add-package cad_source/components/zundostack/zundostack.lpk
	lazbuild  --add-package cad_source/components/fpdwg/fpdwg.lpk
	lazbuild  --add-package cad_source/components/fpspreadsheet/laz_fpspreadsheet_visual_dsgn.lpk
	lazbuild  cad_source/components/lape/package/lape.lpk # runtime only
	lazbuild  --add-package cad_source/components/zreaders/zreaders.lpk
	lazbuild  --add-package cad_source/components/fphunspell/fphunspell.lpk

